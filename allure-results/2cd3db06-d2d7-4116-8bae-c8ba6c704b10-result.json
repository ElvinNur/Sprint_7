{"name": "test_get_orders_list[params1]", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидали код ответа 200, а получили 404\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <test_list_order.TestGetOrder object at 0x000001F5EA8A2060>, params = {'courierId': 1}\n\n    @pytest.mark.parametrize(\"params\", [\n    {},\n    {\"courierId\": 1},\n    {\"nearestStation\": [\"1\", \"2\"]},\n    {\"limit\": 5, \"page\": 2}])\n    def test_get_orders_list(self, params):\n    \n        response = requests.get(BASE_URL, params=params)\n>       assert response.status_code == 200, (\n            f\"Ожидали код ответа 200, а получили {response.status_code}\")\nE       AssertionError: Ожидали код ответа 200, а получили 404\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntest_list_order.py:15: AssertionError"}, "parameters": [{"name": "params", "value": "{'courierId': 1}"}], "start": 1735059542867, "stop": 1735059545389, "uuid": "02903ff5-f01d-4cbc-927b-2d76ac19b5d8", "historyId": "753a61e65e7ddf034da028ffb9227580", "testCaseId": "efab990dca294ff4f21f016b9d2e12b8", "fullName": "test_list_order.TestGetOrder#test_get_orders_list", "labels": [{"name": "suite", "value": "test_list_order"}, {"name": "subSuite", "value": "TestGetOrder"}, {"name": "host", "value": "NOTE-ENURMAMEDOV"}, {"name": "thread", "value": "15336-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_list_order"}]}